{"ast":null,"code":"var _jsxFileName = \"/Users/tjmercer/Desktop/pandora/src/MainView.jsx\";\nimport React from \"react\";\nimport RouteSelect from \"./subviews/RouteSelect\";\nimport MapView from \"./subviews/MapView\";\nimport fetch from \"node-fetch\";\nimport FlexView from \"react-flexview\";\nconst styles = {\n  width: \"400px\",\n  height: \"400px\"\n};\n\nclass MainView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allBuses: [],\n      selectedBuses: []\n    };\n    this.selectRoute = this.selectRoute.bind(this);\n  }\n\n  fetchBuses() {\n    if (!this.state.allBuses.length) {\n      fetch(\"http://developer.itsmarta.com/BRDRestService/RestBusRealTimeService/GetAllBus\").then(res => res.json()).then(json => this.formatData(json));\n    }\n  }\n\n  formatData(unfilteredBusData) {\n    const filteredBusData = unfilteredBusData.map(unfilteredBusDatum => {\n      return {\n        route: unfilteredBusDatum[\"ROUTE\"],\n        lat: unfilteredBusDatum[\"LATITUDE\"],\n        lon: unfilteredBusDatum[\"LONGITUDE\"],\n        timepoint: unfilteredBusDatum[\"TIMEPOINT\"],\n        busNumber: unfilteredBusDatum[\"VEHICLE\"]\n      };\n    });\n    this.setState({\n      allBuses: filteredBusData,\n      selectedBuses: filteredBusData\n    });\n  }\n\n  selectRoute(route) {\n    if (route === \"All\") {\n      this.setState({\n        selectedBuses: this.state.allBuses\n      });\n    } else {\n      const buses = this.state.allBuses.filter(bus => bus.route === route);\n      this.setState({\n        selectedBuses: buses\n      });\n    }\n  }\n\n  render() {\n    this.fetchBuses();\n    return React.createElement(\"div\", {\n      style: styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(FlexView, {\n      hAlignContent: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(RouteSelect, {\n      selectRoute: this.selectRoute,\n      buses: this.state.allBuses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(MapView, {\n      buses: this.state.selectedBuses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MainView;","map":{"version":3,"sources":["/Users/tjmercer/Desktop/pandora/src/MainView.jsx"],"names":["React","RouteSelect","MapView","fetch","FlexView","styles","width","height","MainView","Component","constructor","props","state","allBuses","selectedBuses","selectRoute","bind","fetchBuses","length","then","res","json","formatData","unfilteredBusData","filteredBusData","map","unfilteredBusDatum","route","lat","lon","timepoint","busNumber","setState","buses","filter","bus","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE,OADM;AAEbC,EAAAA,MAAM,EAAE;AAFK,CAAf;;AAKA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,aAAa,EAAE;AAA/B,KAAb;AAEA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,UAAU,GAAG;AACX,QAAI,CAAC,KAAKL,KAAL,CAAWC,QAAX,CAAoBK,MAAzB,EAAiC;AAC/Bf,MAAAA,KAAK,CACH,+EADG,CAAL,CAGGgB,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAIGF,IAJH,CAIQE,IAAI,IAAI,KAAKC,UAAL,CAAgBD,IAAhB,CAJhB;AAKD;AACF;;AAEDC,EAAAA,UAAU,CAACC,iBAAD,EAAoB;AAC5B,UAAMC,eAAe,GAAGD,iBAAiB,CAACE,GAAlB,CAAsBC,kBAAkB,IAAI;AAClE,aAAO;AACLC,QAAAA,KAAK,EAAED,kBAAkB,CAAC,OAAD,CADpB;AAELE,QAAAA,GAAG,EAAEF,kBAAkB,CAAC,UAAD,CAFlB;AAGLG,QAAAA,GAAG,EAAEH,kBAAkB,CAAC,WAAD,CAHlB;AAILI,QAAAA,SAAS,EAAEJ,kBAAkB,CAAC,WAAD,CAJxB;AAKLK,QAAAA,SAAS,EAAEL,kBAAkB,CAAC,SAAD;AALxB,OAAP;AAOD,KARuB,CAAxB;AAUA,SAAKM,QAAL,CAAc;AAAEnB,MAAAA,QAAQ,EAAEW,eAAZ;AAA6BV,MAAAA,aAAa,EAAEU;AAA5C,KAAd;AACD;;AAEDT,EAAAA,WAAW,CAACY,KAAD,EAAQ;AACjB,QAAIA,KAAK,KAAK,KAAd,EAAqB;AACnB,WAAKK,QAAL,CAAc;AAAElB,QAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWC;AAA5B,OAAd;AACD,KAFD,MAEO;AACL,YAAMoB,KAAK,GAAG,KAAKrB,KAAL,CAAWC,QAAX,CAAoBqB,MAApB,CAA2BC,GAAG,IAAIA,GAAG,CAACR,KAAJ,KAAcA,KAAhD,CAAd;AACA,WAAKK,QAAL,CAAc;AAAElB,QAAAA,aAAa,EAAEmB;AAAjB,OAAd;AACD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,SAAKnB,UAAL;AACA,WACE;AAAK,MAAA,KAAK,EAAEZ,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,aAAa,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AACE,MAAA,WAAW,EAAE,KAAKU,WADpB;AAEE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,QAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CADF,CADF;AAaD;;AAxDoC;;AA2DvC,eAAeN,QAAf","sourcesContent":["import React from \"react\";\nimport RouteSelect from \"./subviews/RouteSelect\";\nimport MapView from \"./subviews/MapView\";\nimport fetch from \"node-fetch\";\nimport FlexView from \"react-flexview\";\n\nconst styles = {\n  width: \"400px\",\n  height: \"400px\"\n};\n\nclass MainView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { allBuses: [], selectedBuses: [] };\n\n    this.selectRoute = this.selectRoute.bind(this);\n  }\n\n  fetchBuses() {\n    if (!this.state.allBuses.length) {\n      fetch(\n        \"http://developer.itsmarta.com/BRDRestService/RestBusRealTimeService/GetAllBus\"\n      )\n        .then(res => res.json())\n        .then(json => this.formatData(json));\n    }\n  }\n\n  formatData(unfilteredBusData) {\n    const filteredBusData = unfilteredBusData.map(unfilteredBusDatum => {\n      return {\n        route: unfilteredBusDatum[\"ROUTE\"],\n        lat: unfilteredBusDatum[\"LATITUDE\"],\n        lon: unfilteredBusDatum[\"LONGITUDE\"],\n        timepoint: unfilteredBusDatum[\"TIMEPOINT\"],\n        busNumber: unfilteredBusDatum[\"VEHICLE\"]\n      };\n    });\n    \n    this.setState({ allBuses: filteredBusData, selectedBuses: filteredBusData });\n  }\n\n  selectRoute(route) {\n    if (route === \"All\") {\n      this.setState({ selectedBuses: this.state.allBuses });\n    } else {\n      const buses = this.state.allBuses.filter(bus => bus.route === route);\n      this.setState({ selectedBuses: buses });\n    }\n  }\n\n  render() {\n    this.fetchBuses();\n    return (\n      <div style={styles}>\n        <FlexView hAlignContent=\"left\">\n          <RouteSelect\n            selectRoute={this.selectRoute}\n            buses={this.state.allBuses}\n          />\n          <div>\n            <MapView buses={this.state.selectedBuses} />\n          </div>\n        </FlexView>\n      </div>\n    );\n  }\n}\n\nexport default MainView;\n"]},"metadata":{},"sourceType":"module"}