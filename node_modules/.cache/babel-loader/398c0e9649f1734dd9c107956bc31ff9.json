{"ast":null,"code":"var _jsxFileName = \"/Users/tjmercer/Desktop/pandora/src/subviews/MapView.jsx\";\nimport React from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport fetch from \"node-fetch\";\nconst mapStyles = {\n  width: \"100%\",\n  height: \"100%\"\n};\n\nclass MapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      busroute: props.busroute,\n      buses: []\n    };\n  }\n\n  fetchBuses() {\n    fetch(\"http://developer.itsmarta.com/BRDRestService/RestBusRealTimeService/GetAllBus\").then(res => res.json()).then(json => this.formatData(json));\n  }\n\n  formatData(data) {\n    formatedData = data.map(datum => {\n      return {\n        route: datum[\"ROUTE\"],\n        lat: datum[\"LATITUDE\"],\n        lon: datum[\"LONGITUDE\"],\n        timepoint: datum[\"TIMEPOINT\"]\n      };\n    });\n    this.setState;\n  }\n\n  componentDidUpdate() {\n    if (this.state.busroute && this.state.buses[0] && this.state.busroute !== this.state.buses[0]) {\n      this.fetchBuses();\n    }\n  }\n\n  render() {\n    return React.createElement(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: mapStyles,\n      initialCenter: {\n        lat: 33.749,\n        lng: -84.388\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyB_Z9lTIAzbW2VBkebVJWWjGgTvJZLQk8o\"\n})(MapView);","map":{"version":3,"sources":["/Users/tjmercer/Desktop/pandora/src/subviews/MapView.jsx"],"names":["React","Map","GoogleApiWrapper","Marker","fetch","mapStyles","width","height","MapView","Component","constructor","props","state","busroute","buses","fetchBuses","then","res","json","formatData","data","formatedData","map","datum","route","lat","lon","timepoint","setState","componentDidUpdate","render","google","lng","apiKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,MADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;;AAKA,MAAMC,OAAN,SAAsBR,KAAK,CAACS,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAEF,KAAK,CAACE,QAAlB;AAA4BC,MAAAA,KAAK,EAAE;AAAnC,KAAb;AACD;;AAEDC,EAAAA,UAAU,GAAE;AACVX,IAAAA,KAAK,CACD,+EADC,CAAL,CAGKY,IAHL,CAGUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHjB,EAIKF,IAJL,CAIUE,IAAI,IAAI,KAAKC,UAAL,CAAgBD,IAAhB,CAJlB;AAKD;;AAEHC,EAAAA,UAAU,CAACC,IAAD,EAAO;AACXC,IAAAA,YAAY,GAAGD,IAAI,CAACE,GAAL,CAASC,KAAK,IAAI;AAC/B,aAAO;AACLC,QAAAA,KAAK,EAAED,KAAK,CAAC,OAAD,CADP;AAELE,QAAAA,GAAG,EAAEF,KAAK,CAAC,UAAD,CAFL;AAGLG,QAAAA,GAAG,EAAEH,KAAK,CAAC,WAAD,CAHL;AAILI,QAAAA,SAAS,EAAEJ,KAAK,CAAC,WAAD;AAJX,OAAP;AAMD,KAPc,CAAf;AAQA,SAAKK,QAAL;AACD;;AAEHC,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAKjB,KAAL,CAAWC,QAAX,IAAuB,KAAKD,KAAL,CAAWE,KAAX,CAAiB,CAAjB,CAAvB,IAA8C,KAAKF,KAAL,CAAWC,QAAX,KAAwB,KAAKD,KAAL,CAAWE,KAAX,CAAiB,CAAjB,CAA1E,EAA+F;AAC7F,WAAKC,UAAL;AACD;AACF;;AAEDe,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKnB,KAAL,CAAWoB,MADrB;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,KAAK,EAAE1B,SAHT;AAIE,MAAA,aAAa,EAAE;AAAEoB,QAAAA,GAAG,EAAE,MAAP;AAAeO,QAAAA,GAAG,EAAE,CAAC;AAArB,OAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AAzCmC;;AA4CtC,eAAe9B,gBAAgB,CAAC;AAC9B+B,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZzB,OAFY,CAAf","sourcesContent":["import React from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport fetch from \"node-fetch\";\n\nconst mapStyles = {\n  width: \"100%\",\n  height: \"100%\"\n};\n\nclass MapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { busroute: props.busroute, buses: []};\n  }\n\n  fetchBuses(){\n    fetch(\n        \"http://developer.itsmarta.com/BRDRestService/RestBusRealTimeService/GetAllBus\"\n      )\n        .then(res => res.json())\n        .then(json => this.formatData(json));\n  }\n    \nformatData(data) {\n      formatedData = data.map(datum => {\n        return {\n          route: datum[\"ROUTE\"],\n          lat: datum[\"LATITUDE\"],\n          lon: datum[\"LONGITUDE\"],\n          timepoint: datum[\"TIMEPOINT\"]\n        };\n      });\n      this.setState\n    }\n\n  componentDidUpdate() {\n    if (this.state.busroute && this.state.buses[0] && this.state.busroute !== this.state.buses[0]) {\n      this.fetchBuses();\n    }\n  }\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={8}\n        style={mapStyles}\n        initialCenter={{ lat: 33.749, lng: -84.388 }}\n      />\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyB_Z9lTIAzbW2VBkebVJWWjGgTvJZLQk8o\"\n})(MapView);\n"]},"metadata":{},"sourceType":"module"}