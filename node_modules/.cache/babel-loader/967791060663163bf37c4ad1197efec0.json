{"ast":null,"code":"var _jsxFileName = \"/Users/tjmercer/Desktop/homework-core-master/src/dashboard/dashboardSubviews/ProgramGrid.jsx\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport fetch from \"node-fetch\";\nimport _ from \"lodash\";\nimport Program from \"./Program\";\n\nclass ProgramGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      programs: [],\n      moreInfo: false\n    };\n  }\n\n  getPrograms() {\n    if (!this.state.programs.length) {\n      let programs = [];\n      fetch(\"https://api.myjson.com/bins/5bdb3\").then(res => res.json()).then(json => {\n        programs = json;\n        fetch(\"https://api.myjson.com/bins/47axv\").then(res => res.json()).then(json => {\n          for (let i = 0; i++; i < programs.length) {\n            let program = programs[i];\n          }\n\n          programs.forEach(program => {\n            json.filter();\n          });\n\n          const sorted = _.sortBy(json, \"ProgramId\");\n\n          debugger;\n        });\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.programs.length) {\n      this.getPrograms(true);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Program, {\n      dataTime: \"monkeystuff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ProgramGrid;","map":{"version":3,"sources":["/Users/tjmercer/Desktop/homework-core-master/src/dashboard/dashboardSubviews/ProgramGrid.jsx"],"names":["React","Grid","fetch","_","Program","ProgramGrid","Component","constructor","props","state","programs","moreInfo","getPrograms","length","then","res","json","i","program","forEach","filter","sorted","sortBy","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,WAAW,GAAG;AACZ,QAAI,CAAC,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,MAAzB,EAAiC;AAC/B,UAAIH,QAAQ,GAAG,EAAf;AACAR,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACGY,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZN,QAAAA,QAAQ,GAAGM,IAAX;AACAd,QAAAA,KAAK,CAAC,mCAAD,CAAL,CACGY,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACV,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAiBA,CAAC,EAAlB,EAAsBA,CAAC,GAAEP,QAAQ,CAACG,MAAlC,EAA0C;AACtC,gBAAIK,OAAO,GAAGR,QAAQ,CAACO,CAAD,CAAtB;AAEH;;AACDP,UAAAA,QAAQ,CAACS,OAAT,CAAiBD,OAAO,IAAI;AACxBF,YAAAA,IAAI,CAACI,MAAL;AACH,WAFD;;AAGF,gBAAMC,MAAM,GAAGlB,CAAC,CAACmB,MAAF,CAASN,IAAT,EAAe,WAAf,CAAf;;AACA;AACD,SAZH;AAaD,OAjBH;AAkBD;AACF;;AAEDO,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKd,KAAL,CAAWC,QAAX,CAAoBG,MAAzB,EAAiC;AAC/B,WAAKD,WAAL,CAAiB,IAAjB;AACD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAE,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AA7CuC;;AAgD1C,eAAeP,WAAf","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport fetch from \"node-fetch\";\nimport _ from \"lodash\";\nimport Program from \"./Program\";\n\nclass ProgramGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      programs: [],\n      moreInfo: false\n    };\n  }\n\n  getPrograms() {\n    if (!this.state.programs.length) {\n      let programs = [];\n      fetch(\"https://api.myjson.com/bins/5bdb3\")\n        .then(res => res.json())\n        .then(json => {\n          programs = json;\n          fetch(\"https://api.myjson.com/bins/47axv\")\n            .then(res => res.json())\n            .then(json => {\n                for (let i = 0 ; i++; i< programs.length) {\n                    let program = programs[i];\n\n                }\n                programs.forEach(program => {\n                    json.filter()\n                });\n              const sorted = _.sortBy(json, \"ProgramId\");\n              debugger;\n            });\n        });\n    }\n  }\n\n  render() {\n    if (!this.state.programs.length) {\n      this.getPrograms(true);\n    }\n\n    return (\n      <div>\n        <Grid container spacing={3}>\n          <Program dataTime={\"monkeystuff\"} />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default ProgramGrid;\n"]},"metadata":{},"sourceType":"module"}