{"ast":null,"code":"var _jsxFileName = \"/Users/tjmercer/Desktop/pandora/src/subviews/MapView.jsx\";\nimport React from \"react\";\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\n\nclass MapView extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedBus: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onMapClicked = () => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      selectedBus: null,\n      activeMarker: null,\n      showingInfoWindow: false\n    };\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.onMapClicked = this.onMapClicked.bind(this);\n  }\n\n  busInfoString(bus) {\n    return \"Bus number \" + bus[\"busNumber\"] + \" is currently at or approaching \" + bus[\"timepoint\"];\n  }\n\n  render() {\n    return React.createElement(Map, {\n      google: this.props.google,\n      zoom: 10,\n      style: {\n        height: \"100vh\"\n      },\n      initialCenter: {\n        lat: 33.749,\n        lng: -84.388\n      },\n      onClick: this.onMapClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.buses.map(bus => React.createElement(Marker, {\n      position: {\n        lat: bus.lat,\n        lng: bus.lon\n      },\n      name: this.busInfoString(bus),\n      onClick: this.onMarkerClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.selectedBus ? this.state.selectedBus.name : \"\"))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyB_Z9lTIAzbW2VBkebVJWWjGgTvJZLQk8o\"\n})(MapView);","map":{"version":3,"sources":["/Users/tjmercer/Desktop/pandora/src/subviews/MapView.jsx"],"names":["React","Map","GoogleApiWrapper","Marker","InfoWindow","MapView","Component","constructor","props","onMarkerClick","marker","e","setState","selectedBus","activeMarker","showingInfoWindow","onMapClicked","state","bind","busInfoString","bus","render","google","height","lat","lng","buses","map","lon","name","apiKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,EAAwCC,UAAxC,QAA0D,mBAA1D;;AAEA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACjB,UAAMA,MAAN;;AADiB,SAqBnBC,aArBmB,GAqBH,CAACD,KAAD,EAAQE,MAAR,EAAgBC,CAAhB,KACd,KAAKC,QAAL,CAAc;AACZC,MAAAA,WAAW,EAAEL,KADD;AAEZM,MAAAA,YAAY,EAAEJ,MAFF;AAGZK,MAAAA,iBAAiB,EAAE;AAHP,KAAd,CAtBiB;;AAAA,SA4BnBC,YA5BmB,GA4BJ,MAAM;AACnB,UAAI,KAAKC,KAAL,CAAWF,iBAAf,EAAkC;AAChC,aAAKH,QAAL,CAAc;AACZG,UAAAA,iBAAiB,EAAE,KADP;AAEZD,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KAnCkB;;AAEjB,SAAKG,KAAL,GAAa;AACXJ,MAAAA,WAAW,EAAE,IADF;AAEXC,MAAAA,YAAY,EAAE,IAFH;AAGXC,MAAAA,iBAAiB,EAAE;AAHR,KAAb;AAMA,SAAKN,aAAL,GAAqB,KAAKA,aAAL,CAAmBS,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKF,YAAL,GAAoB,KAAKA,YAAL,CAAkBE,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,aAAa,CAACC,GAAD,EAAM;AACjB,WACE,gBACAA,GAAG,CAAC,WAAD,CADH,GAEA,kCAFA,GAGAA,GAAG,CAAC,WAAD,CAJL;AAMD;;AAkBDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKb,KAAL,CAAWc,MADrB;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE;AADH,OAHT;AAME,MAAA,aAAa,EAAE;AAAEC,QAAAA,GAAG,EAAE,MAAP;AAAeC,QAAAA,GAAG,EAAE,CAAC;AAArB,OANjB;AAOE,MAAA,OAAO,EAAE,KAAKT,YAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASG,KAAKR,KAAL,CAAWkB,KAAX,CAAiBC,GAAjB,CAAqBP,GAAG,IACvB,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE;AAAEI,QAAAA,GAAG,EAAEJ,GAAG,CAACI,GAAX;AAAgBC,QAAAA,GAAG,EAAEL,GAAG,CAACQ;AAAzB,OADZ;AAEE,MAAA,IAAI,EAAE,KAAKT,aAAL,CAAmBC,GAAnB,CAFR;AAGE,MAAA,OAAO,EAAE,KAAKX,aAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CATH,EAgBE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKQ,KAAL,CAAWH,YADrB;AAEE,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWF,iBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKE,KAAL,CAAWJ,WAAX,GAAyB,KAAKI,KAAL,CAAWJ,WAAX,CAAuBgB,IAAhD,GAAuD,EAA5D,CADF,CAJF,CAhBF,CADF;AA2BD;;AAlEmC;;AAqEtC,eAAe3B,gBAAgB,CAAC;AAC9B4B,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZzB,OAFY,CAAf","sourcesContent":["import React from \"react\";\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\n\nclass MapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedBus: null,\n      activeMarker: null,\n      showingInfoWindow: false\n    };\n\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.onMapClicked = this.onMapClicked.bind(this);\n  }\n\n  busInfoString(bus) {\n    return (\n      \"Bus number \" +\n      bus[\"busNumber\"] +\n      \" is currently at or approaching \" +\n      bus[\"timepoint\"]\n    );\n  }\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedBus: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onMapClicked = () => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={10}\n        style={{\n          height: \"100vh\"\n        }}\n        initialCenter={{ lat: 33.749, lng: -84.388 }}\n        onClick={this.onMapClicked}\n      >\n        {this.props.buses.map(bus => (\n          <Marker\n            position={{ lat: bus.lat, lng: bus.lon }}\n            name={this.busInfoString(bus)}\n            onClick={this.onMarkerClick}\n          />\n        ))}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n        >\n          <div>\n            <h2>{this.state.selectedBus ? this.state.selectedBus.name : \"\"}</h2>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyB_Z9lTIAzbW2VBkebVJWWjGgTvJZLQk8o\"\n})(MapView);\n"]},"metadata":{},"sourceType":"module"}