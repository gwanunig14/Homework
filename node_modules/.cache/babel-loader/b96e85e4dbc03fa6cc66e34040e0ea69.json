{"ast":null,"code":"var _jsxFileName = \"/Users/tjmercer/Desktop/pandora/src/subviews/MapView.jsx\";\nimport React from \"react\";\nimport { Map, GoogleApiWrapper, Marker, In } from \"google-maps-react\";\nconst mapStyles = {\n  height: \"100vh\"\n};\n\nclass MapView extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onMapClicked = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  busInfoString(bus) {\n    return \"Bus number \" + bus[\"busNumber\"] + \" is currently at or between \" + bus[\"timeoint\"];\n  }\n\n  render() {\n    return React.createElement(Map, {\n      google: this.props.google,\n      zoom: 10,\n      style: mapStyles,\n      initialCenter: {\n        lat: 33.749,\n        lng: -84.388\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.props.buses.map(bus => React.createElement(Marker, {\n      position: {\n        lat: bus.lat,\n        lng: bus.lon\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.selectedPlace.name))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyB_Z9lTIAzbW2VBkebVJWWjGgTvJZLQk8o\"\n})(MapView);","map":{"version":3,"sources":["/Users/tjmercer/Desktop/pandora/src/subviews/MapView.jsx"],"names":["React","Map","GoogleApiWrapper","Marker","In","mapStyles","height","MapView","Component","onMarkerClick","props","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onMapClicked","state","busInfoString","bus","render","google","lat","lng","buses","map","lon","name","apiKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,EAAwCC,EAAxC,QAAkD,mBAAlD;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAE;AADQ,CAAlB;;AAIA,MAAMC,OAAN,SAAsBP,KAAK,CAACQ,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAUpCC,aAVoC,GAUpB,CAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB,KACd,KAAKC,QAAL,CAAc;AACZC,MAAAA,aAAa,EAAEJ,KADH;AAEZK,MAAAA,YAAY,EAAEJ,MAFF;AAGZK,MAAAA,iBAAiB,EAAE;AAHP,KAAd,CAXkC;;AAAA,SAiBpCC,YAjBoC,GAiBpBP,KAAD,IAAW;AACxB,UAAI,KAAKQ,KAAL,CAAWF,iBAAf,EAAkC;AAChC,aAAKH,QAAL,CAAc;AACZG,UAAAA,iBAAiB,EAAE,KADP;AAEZD,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KAxBmC;AAAA;;AACpCI,EAAAA,aAAa,CAACC,GAAD,EAAM;AACjB,WACE,gBACAA,GAAG,CAAC,WAAD,CADH,GAEA,8BAFA,GAGAA,GAAG,CAAC,UAAD,CAJL;AAMD;;AAkBDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWY,MADrB;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,KAAK,EAAEjB,SAHT;AAIE,MAAA,aAAa,EAAE;AAAEkB,QAAAA,GAAG,EAAE,MAAP;AAAeC,QAAAA,GAAG,EAAE,CAAC;AAArB,OAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKd,KAAL,CAAWe,KAAX,CAAiBC,GAAjB,CAAqBN,GAAG,IACvB,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE;AAAEG,QAAAA,GAAG,EAAEH,GAAG,CAACG,GAAX;AAAgBC,QAAAA,GAAG,EAAEJ,GAAG,CAACO;AAAzB,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CANH,EAWE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWH,YADrB;AAEE,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWF,iBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKE,KAAL,CAAWJ,aAAX,CAAyBc,IAA9B,CADF,CAHJ,CAXF,CADF;AAqBD;;AAhDmC;;AAmDtC,eAAe1B,gBAAgB,CAAC;AAC9B2B,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZtB,OAFY,CAAf","sourcesContent":["import React from \"react\";\nimport { Map, GoogleApiWrapper, Marker, In } from \"google-maps-react\";\n\nconst mapStyles = {\n  height: \"100vh\"\n};\n\nclass MapView extends React.Component {\n  busInfoString(bus) {\n    return (\n      \"Bus number \" +\n      bus[\"busNumber\"] +\n      \" is currently at or between \" +\n      bus[\"timeoint\"]\n    );\n  }\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      })\n    }\n  };\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={10}\n        style={mapStyles}\n        initialCenter={{ lat: 33.749, lng: -84.388 }}\n      >\n        {this.props.buses.map(bus => (\n          <Marker\n            position={{ lat: bus.lat, lng: bus.lon }}\n          />\n        ))}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}>\n            <div>\n              <h1>{this.state.selectedPlace.name}</h1>\n            </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyB_Z9lTIAzbW2VBkebVJWWjGgTvJZLQk8o\"\n})(MapView);\n"]},"metadata":{},"sourceType":"module"}