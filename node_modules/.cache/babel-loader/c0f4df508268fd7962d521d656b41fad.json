{"ast":null,"code":"var _jsxFileName = \"/Users/tjmercer/Desktop/pandora/src/MainView.jsx\";\nimport React from \"react\";\nimport RouteSelect from \"./subviews/RouteSelect\";\nimport MapView from \"./subviews/MapView\";\nimport fetch from \"node-fetch\";\n\nclass MainView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      busroute: \"\",\n      buses: []\n    };\n    this.submitRoute = this.submitRoute.bind(this);\n  }\n\n  fetchBuses() {\n    if (!this.state.buses.length) {\n      fetch(\"http://developer.itsmarta.com/BRDRestService/RestBusRealTimeService/GetBusByRoute/\" + this.props.route).then(res => res.json()).then(json => this.formatData(json));\n    }\n  }\n\n  formatData(data) {\n    const formatedData = data.map(datum => {\n      return {\n        route: datum[\"ROUTE\"],\n        lat: datum[\"LATITUDE\"],\n        lon: datum[\"LONGITUDE\"],\n        timepoint: datum[\"TIMEPOINT\"]\n      };\n    });\n    this.setState({\n      buses: formatedData\n    });\n  }\n\n  submitRoute(route) {\n    this.setState({\n      busroute: route\n    });\n  }\n\n  render() {\n    fetch;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(RouteSelect, {\n      submitRoute: this.submitRoute,\n      buses: this.state.buses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MainView;","map":{"version":3,"sources":["/Users/tjmercer/Desktop/pandora/src/MainView.jsx"],"names":["React","RouteSelect","MapView","fetch","MainView","Component","constructor","props","state","busroute","buses","submitRoute","bind","fetchBuses","length","route","then","res","json","formatData","data","formatedData","map","datum","lat","lon","timepoint","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KAAb;AAEA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,UAAU,GAAG;AACX,QAAI,CAAC,KAAKL,KAAL,CAAWE,KAAX,CAAiBI,MAAtB,EAA8B;AAC9BX,MAAAA,KAAK,CACH,uFACE,KAAKI,KAAL,CAAWQ,KAFV,CAAL,CAIGC,IAJH,CAIQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJf,EAKGF,IALH,CAKQE,IAAI,IAAI,KAAKC,UAAL,CAAgBD,IAAhB,CALhB;AAMC;AACF;;AAEDC,EAAAA,UAAU,CAACC,IAAD,EAAO;AACf,UAAMC,YAAY,GAAGD,IAAI,CAACE,GAAL,CAASC,KAAK,IAAI;AACrC,aAAO;AACLR,QAAAA,KAAK,EAAEQ,KAAK,CAAC,OAAD,CADP;AAELC,QAAAA,GAAG,EAAED,KAAK,CAAC,UAAD,CAFL;AAGLE,QAAAA,GAAG,EAAEF,KAAK,CAAC,WAAD,CAHL;AAILG,QAAAA,SAAS,EAAEH,KAAK,CAAC,WAAD;AAJX,OAAP;AAMD,KAPoB,CAArB;AAQA,SAAKI,QAAL,CAAc;AAAEjB,MAAAA,KAAK,EAAEW;AAAT,KAAd;AACD;;AAEDV,EAAAA,WAAW,CAACI,KAAD,EAAQ;AACjB,SAAKY,QAAL,CAAc;AAAElB,MAAAA,QAAQ,EAAEM;AAAZ,KAAd;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACPzB,IAAAA,KAAK;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAE,KAAKQ,WAA/B;AAA4C,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAMD;;AA3CoC;;AA8CvC,eAAeN,QAAf","sourcesContent":["import React from \"react\";\nimport RouteSelect from \"./subviews/RouteSelect\";\nimport MapView from \"./subviews/MapView\";\nimport fetch from \"node-fetch\";\n\nclass MainView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { busroute: \"\", buses: [] };\n\n    this.submitRoute = this.submitRoute.bind(this);\n  }\n\n  fetchBuses() {\n    if (!this.state.buses.length) {\n    fetch(\n      \"http://developer.itsmarta.com/BRDRestService/RestBusRealTimeService/GetBusByRoute/\" +\n        this.props.route\n    )\n      .then(res => res.json())\n      .then(json => this.formatData(json));\n    }\n  }\n\n  formatData(data) {\n    const formatedData = data.map(datum => {\n      return {\n        route: datum[\"ROUTE\"],\n        lat: datum[\"LATITUDE\"],\n        lon: datum[\"LONGITUDE\"],\n        timepoint: datum[\"TIMEPOINT\"]\n      };\n    });\n    this.setState({ buses: formatedData });\n  }\n\n  submitRoute(route) {\n    this.setState({ busroute: route });\n  }\n\n  render() {\n    fetch\n    return (\n      <div>\n        <RouteSelect submitRoute={this.submitRoute} buses={this.state.buses} />\n        {/* <MapView buses={this.state.buses} /> */}\n      </div>\n    );\n  }\n}\n\nexport default MainView;\n"]},"metadata":{},"sourceType":"module"}