{"ast":null,"code":"var _jsxFileName = \"/Users/tjmercer/Desktop/homework-core-master/src/dashboard/dashboardSubviews/ProgramGrid.jsx\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport fetch from \"node-fetch\";\nimport _ from \"lodash\";\nimport Program from \"./Program\";\n\nclass ProgramGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      programs: [],\n      moreInfo: false\n    };\n  }\n\n  getPrograms() {\n    if (!this.state.programs.length) {\n      let programData = [];\n      fetch(\"https://api.myjson.com/bins/5bdb3\").then(res => res.json()).then(json => {\n        programData = json;\n        fetch(\"https://api.myjson.com/bins/47axv\").then(res => res.json()).then(json => {\n          for (let i = 0; i < programs.length; i++) {\n            const programPriceData = json.filter(priceData => priceData.ProgramID === programData[i].ProgramID);\n            programData[i][\"priceData\"] = programPriceData;\n          }\n\n          this.setState({\n            programs: programData\n          });\n        });\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.programs.length) {\n      this.getPrograms(true);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.programs ? this.state.programs.map(program => React.createElement(Program, {\n      data: program,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })) : null));\n  }\n\n}\n\nexport default ProgramGrid;","map":{"version":3,"sources":["/Users/tjmercer/Desktop/homework-core-master/src/dashboard/dashboardSubviews/ProgramGrid.jsx"],"names":["React","Grid","fetch","_","Program","ProgramGrid","Component","constructor","props","state","programs","moreInfo","getPrograms","length","programData","then","res","json","i","programPriceData","filter","priceData","ProgramID","setState","render","map","program"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,WAAW,GAAG;AACZ,QAAI,CAAC,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,MAAzB,EAAiC;AAC/B,UAAIC,WAAW,GAAG,EAAlB;AACAZ,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACGa,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZH,QAAAA,WAAW,GAAGG,IAAd;AACAf,QAAAA,KAAK,CAAC,mCAAD,CAAL,CACGa,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZ,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,QAAQ,CAACG,MAA7B,EAAqCK,CAAC,EAAtC,EAA0C;AACxC,kBAAMC,gBAAgB,GAAGF,IAAI,CAACG,MAAL,CACvBC,SAAS,IAAIA,SAAS,CAACC,SAAV,KAAwBR,WAAW,CAACI,CAAD,CAAX,CAAeI,SAD7B,CAAzB;AAGAR,YAAAA,WAAW,CAACI,CAAD,CAAX,CAAe,WAAf,IAA8BC,gBAA9B;AACD;;AACD,eAAKI,QAAL,CAAc;AAAEb,YAAAA,QAAQ,EAAEI;AAAZ,WAAd;AACD,SAVH;AAWD,OAfH;AAgBD;AACF;;AAEDU,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKf,KAAL,CAAWC,QAAX,CAAoBG,MAAzB,EAAiC;AAC/B,WAAKD,WAAL,CAAiB,IAAjB;AACD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWC,QAAX,GAAsB,KAAKD,KAAL,CAAWC,QAAX,CAAoBe,GAApB,CAAwBC,OAAO,IACpD,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAEA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADqB,CAAtB,GAEG,IAHN,CADF,CADF;AASD;;AA7CuC;;AAgD1C,eAAerB,WAAf","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport fetch from \"node-fetch\";\nimport _ from \"lodash\";\nimport Program from \"./Program\";\n\nclass ProgramGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      programs: [],\n      moreInfo: false\n    };\n  }\n\n  getPrograms() {\n    if (!this.state.programs.length) {\n      let programData = [];\n      fetch(\"https://api.myjson.com/bins/5bdb3\")\n        .then(res => res.json())\n        .then(json => {\n          programData = json;\n          fetch(\"https://api.myjson.com/bins/47axv\")\n            .then(res => res.json())\n            .then(json => {\n              for (let i = 0; i < programs.length; i++) {\n                const programPriceData = json.filter(\n                  priceData => priceData.ProgramID === programData[i].ProgramID\n                );\n                programData[i][\"priceData\"] = programPriceData;\n              }\n              this.setState({ programs: programData });\n            });\n        });\n    }\n  }\n\n  render() {\n    if (!this.state.programs.length) {\n      this.getPrograms(true);\n    }\n\n    return (\n      <div>\n        <Grid container spacing={3}>\n          {this.state.programs ? this.state.programs.map(program => (\n            <Program data={program} />\n          )): null}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default ProgramGrid;\n"]},"metadata":{},"sourceType":"module"}