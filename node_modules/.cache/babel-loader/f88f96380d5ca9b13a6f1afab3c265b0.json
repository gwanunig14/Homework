{"ast":null,"code":"var _jsxFileName = \"/Users/tjmercer/Desktop/homework-core-master/src/dashboard/Dashboard.jsx\";\nimport React from \"react\";\nimport DashboardHeader from \"./DashboardHeader\";\nimport FlexView from \"react-flexview\";\nimport plus from \"./../assets/plus_icon.png\";\nimport ProgramGrid from \"./dashboardSubviews/ProgramGrid\";\nimport fetch from \"node-fetch\";\nimport _ from \"lodash\";\nimport NumberFormat from \"react-number-format\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"./Dashboard.css\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      programs: [],\n      addNewButtonText: \"New Program\"\n    };\n    this.addNewProgram = this.addNewProgram.bind(this);\n  }\n\n  getPrograms() {\n    if (!this.state.programs.length) {\n      let programData = [];\n      fetch(\"https://api.myjson.com/bins/5bdb3\").then(res => res.json()).then(json => {\n        programData = json;\n        fetch(\"https://api.myjson.com/bins/47axv\").then(res => res.json()).then(json => {\n          for (let i = 0; i < programData.length; i++) {\n            const programPriceData = json.filter(priceData => priceData.ProgramID === programData[i].ProgramID);\n            programData[i][\"priceData\"] = programPriceData;\n          }\n\n          this.setState({\n            programs: programData\n          });\n        });\n      });\n    }\n  }\n\n  addNewProgram() {\n    this.setState({\n      addNewButtonText: \"Congratulations on adding a new program!\"\n    });\n    setTimeout(() => {\n      this.setState({\n        addNewButtonText: \"New Program\"\n      });\n    }, 3000);\n  }\n\n  render() {\n    if (!this.state.programs.length) {\n      this.getPrograms();\n    }\n\n    return React.createElement(\"div\", {\n      className: \"mainView\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(DashboardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(FlexView, {\n      hAlignContent: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"newProgramButton\",\n      onClick: this.addNewProgram,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: plus,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"buttonLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.addNewButtonText)), this.state.programs.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(ProgramGrid, {\n      programs: this.state.programs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"allPrograms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"firstRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"firstRowHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"All Programs\")), React.createElement(Col, {\n      className: \"secondRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"otherHeaders\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Monthly Sales\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"otherHeaders\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Monthly Attendance\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), this.state.programs.map(program => {\n      if (program.ProgramID >= 103) {\n        return React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Col, {\n          className: \"firstRow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, program.Name), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"more\")), React.createElement(Col, {\n          className: \"secondRow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(NumberFormat, {\n          value: program.TotalMonthlySales,\n          displayType: \"text\",\n          thousandSeparator: true,\n          prefix: \"$\",\n          decimalScale: 2,\n          fixedDecimalScale: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }))), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, program.MonthlyAttendance, \" \", program.ProgramID === 104 ? \"views\" : \"visits\")));\n      }\n    }))) : null));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/tjmercer/Desktop/homework-core-master/src/dashboard/Dashboard.jsx"],"names":["React","DashboardHeader","FlexView","plus","ProgramGrid","fetch","_","NumberFormat","Container","Row","Col","Dashboard","Component","constructor","props","state","programs","addNewButtonText","addNewProgram","bind","getPrograms","length","programData","then","res","json","i","programPriceData","filter","priceData","ProgramID","setState","setTimeout","render","map","program","Name","TotalMonthlySales","MonthlyAttendance"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DashboardHeader from \"./DashboardHeader\";\nimport FlexView from \"react-flexview\";\nimport plus from \"./../assets/plus_icon.png\";\nimport ProgramGrid from \"./dashboardSubviews/ProgramGrid\";\nimport fetch from \"node-fetch\";\nimport _ from \"lodash\";\nimport NumberFormat from \"react-number-format\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"./Dashboard.css\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      programs: [],\n      addNewButtonText: \"New Program\"\n    };\n    this.addNewProgram = this.addNewProgram.bind(this);\n  }\n\n  getPrograms() {\n    if (!this.state.programs.length) {\n      let programData = [];\n      fetch(\"https://api.myjson.com/bins/5bdb3\")\n        .then(res => res.json())\n        .then(json => {\n          programData = json;\n          fetch(\"https://api.myjson.com/bins/47axv\")\n            .then(res => res.json())\n            .then(json => {\n              for (let i = 0; i < programData.length; i++) {\n                const programPriceData = json.filter(\n                  priceData => priceData.ProgramID === programData[i].ProgramID\n                );\n                programData[i][\"priceData\"] = programPriceData;\n              }\n              this.setState({ programs: programData });\n            });\n        });\n    }\n  }\n\n  addNewProgram() {\n    this.setState({\n      addNewButtonText: \"Congratulations on adding a new program!\"\n    });\n    setTimeout(() => {\n      this.setState({\n        addNewButtonText: \"New Program\"\n      });\n    }, 3000);\n  }\n\n  render() {\n    if (!this.state.programs.length) {\n      this.getPrograms();\n    }\n\n    return (\n      <div className={\"mainView\"}>\n        <DashboardHeader />\n        <FlexView hAlignContent=\"left\">\n          <div>\n            <button className={\"newProgramButton\"} onClick={this.addNewProgram}>\n              <img src={plus} alt=\"\" />\n            </button>\n            <p className=\"buttonLabel\">{this.state.addNewButtonText}</p>\n          </div>\n          {this.state.programs.length ? (\n            <div>\n              <ProgramGrid programs={this.state.programs} />\n              <Container className=\"allPrograms\">\n                <Row>\n                  <Col className=\"firstRow\">\n                    <div className=\"firstRowHeader\">All Programs</div>\n                  </Col>\n                  <Col className=\"secondRow\">\n                    <div className=\"otherHeaders\">Monthly Sales</div>\n                  </Col>\n                  <Col>\n                    <div className=\"otherHeaders\">Monthly Attendance</div>\n                  </Col>\n                </Row>\n                <hr />\n                {this.state.programs.map(program => {\n                  if (program.ProgramID >= 103) {\n                    return (\n                      <Row>\n                        <Col className=\"firstRow\">\n                          <div>{program.Name}</div>\n                          <div>more</div>\n                        </Col>\n                        <Col className=\"secondRow\">\n                          <div>\n                            <NumberFormat\n                              value={program.TotalMonthlySales}\n                              displayType={\"text\"}\n                              thousandSeparator={true}\n                              prefix={\"$\"}\n                              decimalScale={2}\n                              fixedDecimalScale={true}\n                            />\n                          </div>\n                        </Col>\n                        <Col>\n                          <div>\n                            {program.MonthlyAttendance}{\" \"}\n                            {program.ProgramID === 104 ? \"views\" : \"visits\"}\n                          </div>\n                        </Col>\n                      </Row>\n                    );\n                  }\n                })}\n              </Container>\n            </div>\n          ) : null}\n        </FlexView>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}